import{_ as i,c as a,a as h,o as l}from"./app-BSNvt_MX.js";const t={};function e(n,s){return l(),a("div",null,[...s[0]||(s[0]=[h(`<h2 id="_1-基础知识" tabindex="-1"><a class="header-anchor" href="#_1-基础知识"><span>1. 基础知识</span></a></h2><h3 id="_1-1-一条数据存储的过程" tabindex="-1"><a class="header-anchor" href="#_1-1-一条数据存储的过程"><span>1.1 一条数据存储的过程</span></a></h3><p><strong>存储数据是处理数据的第一步</strong>。只有正确地把数据存储起来，我们才能进行有效的处理和分析。否则，只能是一团乱麻，无从下手</p><p>那么，怎样才能把用户各种经营相关的、纷繁复杂的数据，有序、高效地存储起来呢？ 在 MySQL 中，一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800824878-c19a0e50-4106-4673-b8ff-18487379666c.png" alt=""></p><p>我们要先创建一个数据库，而不是直接创建数据表呢？</p><p>因为从系统架构的层次上看，MySQL 数据库系统从大到小依次是<strong>数据库服务器</strong>、<strong>数据库</strong>、<strong>数据表</strong>、数据表的<strong>行与列</strong>。</p><p>MySQL 数据库服务器之前已经安装。所以，我们就从创建数据库开始。</p><h3 id="_1-2-标识符命名规则" tabindex="-1"><a class="header-anchor" href="#_1-2-标识符命名规则"><span>1.2 标识符命名规则</span></a></h3><ul><li>数据库名、表名不得超过 30 个字符，变量名限制为 29 个</li><li>必须只能包含 <code>A–Z</code>, <code>a–z</code>, <code>0 – 9</code> , <code>_</code>共 63 个字符</li><li>数据库名、表名、字段名等对象名中间不要包含空格</li><li>同一个MySQL软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名</li><li>必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在SQL语句中使用\`（着重号）引起来</li><li>保持字段名和类型的一致性：在命名字段并为其指定数据类型的时候一定要保证一致性，假如数据类型在一个表里是整数，那在另一个表里可就别变成字符型了</li></ul><h3 id="_1-3-mysql中的数据类型" tabindex="-1"><a class="header-anchor" href="#_1-3-mysql中的数据类型"><span>1.3 MySQL中的数据类型</span></a></h3><table><thead><tr><th>类型</th><th>类型举例</th></tr></thead><tbody><tr><td>整数类型</td><td>TINYINT、SMALLINT、MEDIUMINT、 <strong>INT(或INTEGER)</strong> 、BIGINT</td></tr><tr><td>浮点类型</td><td>FLOAT、DOUBLE</td></tr><tr><td>定点数类型</td><td><strong>DECIMAL</strong></td></tr><tr><td>位类型</td><td>BIT</td></tr><tr><td>日期时间类型</td><td>YEAR、TIME、 <strong>DATE</strong> 、DATETIME、TIMESTAMP</td></tr><tr><td>文本字符串类型</td><td>CHAR、 <strong>VARCHAR</strong> 、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT</td></tr><tr><td>枚举类型</td><td>ENUM</td></tr><tr><td>集合类型</td><td>SET</td></tr><tr><td>二进制字符串类型</td><td>BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB、LONGBLOB</td></tr><tr><td>JSON类型</td><td>JSON对象、JSON数组</td></tr><tr><td>空间数据类型</td><td>单值：GEOMETRY、POINT、LINESTRING、POLYGON 集合：MULTIPOINT、MULTILINESTRING、MULTIPOLYGON、GEOMETRYCOLLECTION</td></tr></tbody></table><p>其中，常用的几类类型介绍如下:</p><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td>INT</td><td>从<code>-2^31</code>到<code>2^31-1</code>的整型数据。存储大小为 4 个字节</td></tr><tr><td>CHAR(size)</td><td>定长字符数据。若未指定，默认为 1 个字符，最大长度 255</td></tr><tr><td>VARCHAR(size)</td><td>可变长字符数据，根据字符串实际长度保存， <strong>必须指定长度</strong></td></tr><tr><td>FLOAT(M,D)</td><td>单精度，占用 4 个字节，M=整数位+小数位，D=小数位。 D&lt;=M&lt;=255,0&lt;=D&lt;=30，默认M+D&lt;=6</td></tr><tr><td>DOUBLE(M,D)</td><td>双精度，占用 8 个字节，D&lt;=M&lt;=255,0&lt;=D&lt;=30，默认M+D&lt;=15</td></tr><tr><td>DECIMAL(M,D)</td><td>高精度小数，占用M+2个字节，D&lt;=M&lt;=65，0&lt;=D&lt;=30，最大取值范围与DOUBLE相同</td></tr><tr><td>DATE</td><td>日期型数据，格式&#39;YYYY-MM-DD&#39;</td></tr><tr><td>BLOB</td><td>二进制形式的长文本数据，最大可达4G</td></tr><tr><td>TEXT</td><td>长文本数据，最大可达4G</td></tr></tbody></table><h2 id="_2-创建和管理数据库" tabindex="-1"><a class="header-anchor" href="#_2-创建和管理数据库"><span>2. 创建和管理数据库</span></a></h2><h3 id="_2-1-创建数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-创建数据库"><span>2.1 创建数据库</span></a></h3><p>方式 1 ：创建数据库</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> 数据库名</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;</span></span></code></pre></div><p>方式 2 ：创建数据库并指定字符集</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> 数据库名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 字符集;</span></span></code></pre></div><p>方式 3 ：判断数据库是否已经存在，不存在则创建数据库（<strong>推荐</strong>）</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> EXISTS</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 数据库名;</span></span></code></pre></div><p>如果MySQL中已经存在相关的数据库，则忽略创建语句，不再创建数据库。</p><blockquote><p>注意：DATABASE 不能改名。一些可视化工具可以改名，它是建新库，把所有表复制到新库，再删旧库完成的。</p></blockquote><h3 id="_2-2-使用数据库" tabindex="-1"><a class="header-anchor" href="#_2-2-使用数据库"><span>2.2 使用数据库</span></a></h3><p>查看当前所有的数据库</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">SHOW DATABASES; #有一个S，代表多个数据库</span></span></code></pre></div><p>查看当前正在使用的数据库</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;  #使用的一个 mysql 中的全局函数</span></span></code></pre></div><p>查看指定库下所有的表</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">SHOW TABLES </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 数据库名;</span></span></code></pre></div><p>查看数据库的创建信息</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 数据库名;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;">-- 或者：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 数据库名\\G</span></span></code></pre></div><p>使用/切换数据库</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">USE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 数据库名;</span></span></code></pre></div><blockquote><p>注意：要操作表格和数据之前必须先说明是对哪个数据库进行操作，否则就要对所有对象加上“<code>数据库名.</code>”</p></blockquote><h3 id="_2-3-修改数据库" tabindex="-1"><a class="header-anchor" href="#_2-3-修改数据库"><span>2.3 修改数据库</span></a></h3><p>更改数据库字符集</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 数据库名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 字符集;  #比如：gbk、utf8等</span></span></code></pre></div><h3 id="_2-4-删除数据库" tabindex="-1"><a class="header-anchor" href="#_2-4-删除数据库"><span>2.4 删除数据库</span></a></h3><p>方式 1 ：删除指定的数据库</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 数据库名;</span></span></code></pre></div><p>方式 2 ：删除指定的数据库（<strong>推荐</strong>）</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> EXISTS</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 数据库名;</span></span></code></pre></div><h2 id="_3-创建表" tabindex="-1"><a class="header-anchor" href="#_3-创建表"><span>3. 创建表</span></a></h2><h3 id="_3-1-创建方式-1" tabindex="-1"><a class="header-anchor" href="#_3-1-创建方式-1"><span>3.1 创建方式 1</span></a></h3><ul><li><strong>必须具备</strong><ul><li><code>CREATE TABLE</code>权限</li><li>存储空间</li></ul></li><li><strong>语法格式</strong></li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> [IF NOT EXISTS] 表名(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 字段1, 数据类型 [约束条件] [默认值],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 字段2, 数据类型 [约束条件] [默认值],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 字段3, 数据类型 [约束条件] [默认值],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> [表约束条件]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">);</span></span></code></pre></div><blockquote><p>加上了<code>IF NOT EXISTS</code>关键字，则表示：如果当前数据库中不存在要创建的数据表，则创建数据表。如果当前数据库中已经存在要创建的数据表，则忽略建表语句，不再创建数据表。</p></blockquote><ul><li><strong>必须指定</strong><ul><li>表名</li><li>列名(或字段名)，数据类型， <strong>长度</strong></li></ul></li><li><strong>可选指定</strong><ul><li>约束条件</li><li>默认值</li></ul></li><li>创建表举例 1</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;">-- 创建表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> emp</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;"> -- int类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> emp_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;"> -- 最多保存 20 个中英文字符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> emp_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">),</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;"> -- 总位数不超过 15 位</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> salary DOUBLE,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;"> -- 日期类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> birthday </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">DATE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> emp;</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800824951-723ee4c8-e9f8-449d-95fa-6127f940cb76.png" alt=""></p><p>MySQL在执行建表语句时，将id字段的类型设置为int(11)，这里的 11 实际上是int类型指定的显示宽度，默认的显示宽度为 11 。也可以在创建数据表的时候指定数据的显示宽度。</p><ul><li>创建表举例 2</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> dept</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;"> -- int类型，自增</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> deptno </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">) AUTO_INCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> dname </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> loc </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">),</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;"> -- 主键</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (deptno)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">DESCRIBE dept;</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825027-0bc5e371-cdd6-4bcf-ae0f-c11cb450d2ee.png" alt=""></p><blockquote><p>在MySQL 8.x版本中，不再推荐为INT类型指定显示长度，并在未来的版本中可能去掉这样的语法。</p></blockquote><h3 id="_3-2-创建方式-2" tabindex="-1"><a class="header-anchor" href="#_3-2-创建方式-2"><span>3.2 创建方式 2</span></a></h3><ul><li>使用 <code>AS subquery</code> 选项， <strong>将创建表和插入数据结合起来</strong> <img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825088-47886335-6560-4528-917a-16d9d12ef349.png" alt=""></li><li>指定的列和子查询中的列要一一对应</li><li>通过列名和默认值定义列</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> emp1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> AS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> *</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">   employees;</span></span></code></pre></div><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> emp2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> AS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> *</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">   employees</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  WHERE</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">  1</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;">-- 创建的emp2是空表</span></span></code></pre></div><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> dept80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> AS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> employee_id,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">         last_name,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">         salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 12</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ANNSAL,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">         hire_date</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">   employees</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">  department_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;</span></span></code></pre></div><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">DESCRIBE dept80;</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825153-0b6bf115-c932-4645-9f6d-d3fba70c3401.png" alt=""></p><h3 id="_3-3-查看数据表结构" tabindex="-1"><a class="header-anchor" href="#_3-3-查看数据表结构"><span>3.3 查看数据表结构</span></a></h3><p>在MySQL中创建好数据表之后，可以查看数据表的结构。MySQL支持使用<code>DESCRIBE/DESC</code>语句查看数据表结构，也支持使用<code>SHOW CREATE TABLE</code>语句查看数据表结构。</p><p>语法格式如下：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 表名\\G</span></span></code></pre></div><p>使用<code>SHOW CREATE TABLE</code>语句不仅可以查看表创建时的详细语句，还可以查看存储引擎和字符编码。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825219-ad60b3ea-0fc7-4449-91ef-614153842c0d.png" alt=""></p><h2 id="_4-修改表" tabindex="-1"><a class="header-anchor" href="#_4-修改表"><span>4. 修改表</span></a></h2><p>修改表指的是修改数据库中已经存在的数据表的结构</p><p><strong>使用 <strong><code>ALTER TABLE</code></strong> 语句可以实现</strong>：</p><ul><li>向已有的表中<strong>添加</strong>列</li><li><strong>修改</strong>现有表中的列</li><li><strong>删除</strong>现有表中的列</li><li><strong>重命名</strong>现有表中的列</li></ul><h3 id="_4-1-追加一个列" tabindex="-1"><a class="header-anchor" href="#_4-1-追加一个列"><span>4.1 追加一个列</span></a></h3><p>语法格式如下：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 【COLUMN】 字段名 字段类型 【</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">FIRST</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">AFTER</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 字段名】;</span></span></code></pre></div><p>举例:</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> dept</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> job_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825298-b8d04899-6bb2-4779-89d6-94db5cb5cdc1.png" alt=""></p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825369-37604d54-7e11-4900-81d6-1ab26d32ca4e.png" alt=""></p><h3 id="_4-2-修改一个列" tabindex="-1"><a class="header-anchor" href="#_4-2-修改一个列"><span>4.2 修改一个列</span></a></h3><ul><li>可以修改列的数据类型，长度、默认值和位置</li><li>修改字段数据类型、长度、默认值、位置的语法格式如下:</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">MODIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 【COLUMN】 字段名1 字段类型 【</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 默认值】【</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">FIRST</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">AFTER</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 字段名2 】;</span></span></code></pre></div><ul><li>举例:</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> dept80</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">MODIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> last_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">);</span></span></code></pre></div><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> dept80</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">MODIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> salary double(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">default</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ;</span></span></code></pre></div><ul><li>对默认值的修改只影响今后对表的修改</li><li>此外，还可以通过此种方式修改列的约束</li></ul><h3 id="_4-3-重命名一个列" tabindex="-1"><a class="header-anchor" href="#_4-3-重命名一个列"><span>4.3 重命名一个列</span></a></h3><p>使用 <code>CHANGE old_column new_column dataType</code>子句重命名列。语法格式如下：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 表名 CHANGE 【column】 列名 新列名 新数据类型;</span></span></code></pre></div><p>举例:</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> dept80</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">CHANGE department_name dept_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">);</span></span></code></pre></div><h3 id="_4-4-删除一个列" tabindex="-1"><a class="header-anchor" href="#_4-4-删除一个列"><span>4.4 删除一个列</span></a></h3><p>删除表中某个字段的语法格式如下:</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DROP</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 【COLUMN】 字段名</span></span></code></pre></div><p>举例:</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> dept80</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DROP</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> COLUMN job_id;</span></span></code></pre></div><h2 id="_5-重命名表" tabindex="-1"><a class="header-anchor" href="#_5-重命名表"><span>5. 重命名表</span></a></h2><ul><li>方式一：使用RENAME</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">RENAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> emp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">TO</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> myemp;</span></span></code></pre></div><ul><li>方式二:</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> dept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">RENAME [TO] detail_dept;  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#464B5D;--shiki-dark-font-style:italic;">-- [TO]可以省略</span></span></code></pre></div><ul><li>必须是对象的拥有者</li></ul><h2 id="_6-删除表" tabindex="-1"><a class="header-anchor" href="#_6-删除表"><span>6. 删除表</span></a></h2><ul><li>在MySQL中，当一张数据表<strong>没有与其他任何数据表形成关联关系时</strong>，可以将当前数据表直接删除。</li><li>数据和结构都被删除</li><li>所有正在运行的相关事务被提交</li><li>所有相关索引被删除</li><li>语法格式：</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> [IF EXISTS] 数据表1 [, 数据表2, ..., 数据表n];</span></span></code></pre></div><p><code>IF EXISTS</code>的含义为：如果当前数据库中存在相应的数据表，则删除数据表；如果当前数据库中不存在相应的数据表，则忽略删除语句，不再执行删除数据表的操作。</p><ul><li>举例:</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> dept80;</span></span></code></pre></div><ul><li><code>DROP TABLE</code> 语句不能回滚</li></ul><h2 id="_7-清空表" tabindex="-1"><a class="header-anchor" href="#_7-清空表"><span>7. 清空表</span></a></h2><ul><li><code>TRUNCATE TABLE</code>语句 <ul><li>删除表中所有的数据</li><li>释放表的存储空间</li></ul></li><li>举例:</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">TRUNCATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> detail_dept;</span></span></code></pre></div><ul><li>TRUNCATE语句<strong>不能回滚</strong> ，而使用 DELETE 语句删除数据，可以回滚</li><li>对比:</li></ul><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> autocommit </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> FALSE;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> emp2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">TRUNCATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> emp2;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> emp2;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ROLLBACK</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> emp2;</span></span></code></pre></div><blockquote><p>阿里开发规范:</p><p>【参考】<strong>TRUNCATE TABLE 比 DELETE 速度快</strong>，且使用的系统和事务日志资源少，但 TRUNCATE 无事务且不触发 TRIGGER，有可能造成事故，故不建议在开发代码中使用此语句。<br> 说明：TRUNCATE TABLE 在功能上与不带 WHERE 子句的 DELETE 语句相同</p></blockquote><h2 id="_8-拓展" tabindex="-1"><a class="header-anchor" href="#_8-拓展"><span>8. 拓展</span></a></h2><h3 id="拓展-1-阿里巴巴《java开发手册》之mysql字段命名" tabindex="-1"><a class="header-anchor" href="#拓展-1-阿里巴巴《java开发手册》之mysql字段命名"><span>拓展 1 ：阿里巴巴《Java开发手册》之MySQL字段命名</span></a></h3><p>【<strong>强制</strong>】表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑</p><ul><li>正例：<code>aliyun_admin</code>，<code>rdc_config</code>，<code>level3_name</code></li><li>反例：<code>AliyunAdmin</code>，<code>rdcConfig</code>，<code>level_3_name</code></li></ul><p>【<strong>强制</strong>】禁用保留字，如 <code>desc</code>、<code>range</code>、<code>match</code>、<code>delayed</code> 等，请参考 MySQL 官方保留字。</p><p>【<strong>强制</strong>】表必备三字段：<code>id</code>, <code>gmt_create</code>, <code>gmt_modified</code>。</p><ul><li>说明：其中 <code>id</code> 必为主键，类型为<code>BIGINT UNSIGNED</code>、单表时自增、步长为 1 。<code>gmt_create</code>, <code>gmt_modified</code> 的类型均为 <code>DATETIME</code> 类型，前者现在时表示<strong>主动式创建</strong>，后者过去分词表示<strong>被动式更新</strong>。</li></ul><p>【<strong>推荐</strong>】表的命名最好是遵循 “业务名称_表的作用”。</p><ul><li>正例：<code>alipay_task</code> 、 <code>force_project</code>、 <code>trade_config</code></li></ul><p>【<strong>推荐</strong>】库名与应用名称尽量一致。</p><p>【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。</p><ul><li>正例：无符号值可以避免误存负数，且扩大了表示范围。 <img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825476-041e4b26-b216-48bd-8bbb-056e908f32da.png" alt=""></li></ul><h3 id="拓展-2-如何理解清空表、删除表等操作需谨慎" tabindex="-1"><a class="header-anchor" href="#拓展-2-如何理解清空表、删除表等操作需谨慎"><span>拓展 2 ：如何理解清空表、删除表等操作需谨慎？</span></a></h3><p><strong>表删除</strong>操作将把表的定义和表中的数据一起删除，并且MySQL在执行删除操作时，不会有任何的确认信息提示，因此执行删除操时应当慎重。在删除表前，最好对表中的数据进行<strong>备份</strong>，这样当操作失误时可以对数据进行恢复，以免造成无法挽回的后果。</p><p>同样的，在使用 <code>ALTER TABLE</code> 进行表的基本修改操作时，在执行操作过程之前，也应该确保对数据进行完整的<strong>备份</strong>，因为数据库的改变是<strong>无法撤销</strong>的，如果添加了一个不需要的字段，可以将其删除；相同的，如果删除了一个需要的列，该列下面的所有数据都将会丢失。</p><h3 id="拓展-3-mysql-8-新特性——ddl的原子化" tabindex="-1"><a class="header-anchor" href="#拓展-3-mysql-8-新特性——ddl的原子化"><span>拓展 3 ：MySQL 8 新特性——DDL的原子化</span></a></h3><p>在MySQL 8.0版本中，<code>InnoDB</code>表的<code>DDL</code>支持事务完整性，即<strong>DDL操作要么成功要么回滚</strong>。DDL操作回滚日志写入到<code>data dictionary</code>数据字典表<code>mysql.innodb_ddl_log</code>（该表是隐藏的表，通过show tables无法看到）中，用于回滚操作。通过设置参数，可将DDL操作日志打印输出到MySQL错误日志中。</p><p>分别在MySQL 5.7版本和MySQL 8.0版本中创建数据库和数据表，结果如下：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DATABASE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> mytest</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">USE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> mytest;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> book1</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> book_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> book_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">SHOW TABLES;</span></span></code></pre></div><p>（1）在MySQL 5.7版本中，测试步骤如下： 删除数据表book1和数据表book2，结果如下：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">DROP</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> TABLE</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> book1,book2</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">ERROR</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 1051</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">42</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> S02</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">): Unknown table </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">mytest.book2</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span></span></code></pre></div><p>再次查询数据库中的数据表名称，结果如下</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">SHOW</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> TABLES</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">Empty</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (0.00 </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>从结果可以看出，虽然删除操作时报错了，但是仍然删除了数据表book1。</p><p>（2）在MySQL 8.0版本中，测试步骤如下： 删除数据表book1和数据表book2，结果如下：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">DROP</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> TABLE</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> book1,book2</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">ERROR</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 1051</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">42</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> S02</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">): Unknown table </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">mytest.book2</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span></span></code></pre></div><p>再次查询数据库中的数据表名称，结果如下</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">show</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> tables</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">+------------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> Tables_in_mytest</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">+------------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> book1</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">            |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">+------------------+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> row</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (0.00 </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>从结果可以看出，数据表book1并没有被删除。</p>`,148)])])}const p=i(t,[["render",e]]),d=JSON.parse('{"path":"/mysql/5fre8wx1/","title":"第10章_创建和管理表","lang":"zh-CN","frontmatter":{"title":"第10章_创建和管理表","createTime":"2025/09/02 16:15:33","permalink":"/mysql/5fre8wx1/","description":"1. 基础知识 1.1 一条数据存储的过程 存储数据是处理数据的第一步。只有正确地把数据存储起来，我们才能进行有效的处理和分析。否则，只能是一团乱麻，无从下手 那么，怎样才能把用户各种经营相关的、纷繁复杂的数据，有序、高效地存储起来呢？ 在 MySQL 中，一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。 我们要...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第10章_创建和管理表\\",\\"image\\":[\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800824878-c19a0e50-4106-4673-b8ff-18487379666c.png\\",\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800824951-723ee4c8-e9f8-449d-95fa-6127f940cb76.png\\",\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825027-0bc5e371-cdd6-4bcf-ae0f-c11cb450d2ee.png\\",\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825088-47886335-6560-4528-917a-16d9d12ef349.png\\",\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825153-0b6bf115-c932-4645-9f6d-d3fba70c3401.png\\",\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825219-ad60b3ea-0fc7-4449-91ef-614153842c0d.png\\",\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825298-b8d04899-6bb2-4779-89d6-94db5cb5cdc1.png\\",\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825369-37604d54-7e11-4900-81d6-1ab26d32ca4e.png\\",\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800825476-041e4b26-b216-48bd-8bbb-056e908f32da.png\\"],\\"dateModified\\":\\"2025-09-02T08:17:01.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://weew12.github.io/mysql/5fre8wx1/"}],["meta",{"property":"og:site_name","content":"WEEW12 BLOG"}],["meta",{"property":"og:title","content":"第10章_创建和管理表"}],["meta",{"property":"og:description","content":"1. 基础知识 1.1 一条数据存储的过程 存储数据是处理数据的第一步。只有正确地把数据存储起来，我们才能进行有效的处理和分析。否则，只能是一团乱麻，无从下手 那么，怎样才能把用户各种经营相关的、纷繁复杂的数据，有序、高效地存储起来呢？ 在 MySQL 中，一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。 我们要..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.nlark.com/yuque/0/2025/png/2447732/1756800824878-c19a0e50-4106-4673-b8ff-18487379666c.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-02T08:17:01.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-02T08:17:01.000Z"}]]},"readingTime":{"minutes":11.28,"words":3385},"git":{"createdTime":1756801021000,"updatedTime":1756801021000,"contributors":[{"name":"weew12","username":"weew12","email":"2528566339@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/weew12?v=4","url":"https://github.com/weew12"}]},"autoDesc":true,"filePathRelative":"notes/database/mysql/第10章_创建和管理表.md","headers":[]}');export{p as comp,d as data};
