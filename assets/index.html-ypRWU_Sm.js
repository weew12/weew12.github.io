import{_ as i,c as a,a as n,o as h}from"./app-BSNvt_MX.js";const l={};function t(k,s){return h(),a("div",null,[...s[0]||(s[0]=[n(`<p>在实际开发中，我们经常会遇到这样的情况：有 <code>2</code> 个或者多个相互关联的表，如<strong>商品信息</strong>和<strong>库存信息</strong>分别存放在 <code>2</code> 个不同的数据表中，我们在添加一条新商品记录的时候，为了保证数据的完整性，必须同时在库存表中添加一条库存记录</p><p>这样一来，我们就必须把这两个关联的操作步骤写到程序里面，而且要用<strong>事务</strong>包裹起来，<strong>确保这两个操作成为一个原子操作</strong>，要么全部执行，要么全部不执行。要是遇到特殊情况，可能还需要对数据进行手动维护，这样就<strong>很容易忘记其中的一步</strong>，导致数据缺失</p><p>这个时候，咱们可以使用<strong>触发器</strong>。 <strong>你可以创建一个触发器，让商品信息数据的插入操作自动触发库存数据的插入操作</strong>。 这样一来，就不用担心因为忘记添加库存数据而导致的数据缺失了</p><h2 id="_1-触发器概述" tabindex="-1"><a class="header-anchor" href="#_1-触发器概述"><span>1. 触发器概述</span></a></h2><p>MySQL从<code>5.0.2</code>版本开始支持触发器。MySQL的触发器和存储过程一样，都是嵌入到MySQL服务器的一段程序。</p><p>触发器是<strong>由事件来触发某个操作</strong>，这些事件包括<code>INSERT</code>、<code>UPDATE</code>、<code>DELETE</code>事件。所谓事件就是指<strong>用户的动作或者触发某项行为</strong>。如果定义了触发程序，当数据库执行这些语句时候，就相当于事件发生了，就会<strong>自动</strong>激发触发器执行相应的操作。</p><p>当对数据表中的数据执行插入、更新和删除操作，需要自动执行一些数据库逻辑时，可以使用触发器来实现。</p><h2 id="_2-触发器的创建" tabindex="-1"><a class="header-anchor" href="#_2-触发器的创建"><span>2. 触发器的创建</span></a></h2><h3 id="_2-1-创建触发器语法" tabindex="-1"><a class="header-anchor" href="#_2-1-创建触发器语法"><span>2.1 创建触发器语法</span></a></h3><p>创建触发器的语法结构是：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TRIGGER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> 触发器名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">BEFORE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">AFTER</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">} {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">INSERT</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DELETE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 表名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> EACH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ROW</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">触发器执行的语句块;</span></span></code></pre></div><p>说明：</p><ul><li><strong>表名</strong>：表示触发器监控的对象</li><li><code>BEFORE|AFTER</code>：表示触发的时间。<code>BEFORE</code> 表示在<strong>事件之前</strong>触发；<code>AFTER</code> 表示在<strong>事件之后</strong>触发</li><li><code>INSERT | UPDATE | DELETE</code>：表示触发的事件 <ul><li><code>INSERT</code> 表示插入记录时触发</li><li><code>UPDATE</code> 表示更新记录时触发</li><li><code>DELETE</code> 表示删除记录时触发</li></ul></li><li>触发器执行的语句块：可以是单条SQL语句，也可以是由<code>BEGIN...END</code>结构组成的复合语句块</li></ul><h3 id="_2-2-代码举例" tabindex="-1"><a class="header-anchor" href="#_2-2-代码举例"><span>2.2 代码举例</span></a></h3><p><strong>举例 1：</strong><br> 1 、创建数据表：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> test_trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">    t_note </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> test_trigger_log</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">    t_log </span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">);</span></span></code></pre></div><p>2 、创建触发器：<br> 创建名称为<code>before_insert</code>的触发器，向<code>test_trigger</code>数据表插入数据之前，向<code>test_trigger_log</code>数据表中插入<code>before_insert</code>的日志信息。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TRIGGER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> before_insert</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">BEFORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> INSERT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> test_trigger</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> EACH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ROW</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> test_trigger_log ( t_log )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">before_insert</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> //</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">DELIMITER ;</span></span></code></pre></div><p>3 、向<code>test_trigger</code>数据表中插入数据</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> test_trigger ( t_note )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">VALUES</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">测试 BEFORE INSERT 触发器</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> );</span></span></code></pre></div><p>4 、查看<code>test_trigger_log</code>数据表中的数据</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#BABED8;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> test_trigger_log</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">+----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> t_log</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">         |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">+----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">  1</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> before_insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">+----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> row</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (0.00 </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p><strong>举例 2：</strong><br> 1 、创建名称为<code>after_insert</code>的触发器，向<code>test_trigger</code>数据表插入数据之后，向<code>test_trigger_log</code>数据表中插入<code>after_insert</code>的日志信息。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TRIGGER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> after_insert</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">AFTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> INSERT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> test_trigger</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> EACH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ROW</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> test_trigger_log ( t_log )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">  VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">after_insert</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> //</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">DELIMITER ;</span></span></code></pre></div><p>2 、向<code>test_trigger</code>数据表中插入数据。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> test_trigger ( t_note )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">VALUES</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">测试 AFTER INSERT 触发器</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> );</span></span></code></pre></div><p>3 、查看<code>test_trigger_log</code>数据表中的数据</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#BABED8;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> test_trigger_log</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">+----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> t_log</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">         |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">+----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">  1</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> before_insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">  2</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> before_insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">  3</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> after_insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">  |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">+----+---------------+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">3</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (0.00 </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p><strong>举例 3 ：</strong><br> 定义触发器“<code>salary_check_trigger</code>”，基于员工表“<code>employees</code>”的<code>INSERT</code>事件，在<code>INSERT</code>之前检查将要添加的新员工薪资是否大于他领导的薪资，如果大于领导薪资，则报<code>sqlstate_value</code>为&#39;<code>HY000</code>&#39;的错误，从而使得添加失败。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TRIGGER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> salary_check_trigger</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">BEFORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> INSERT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> employees</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> EACH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">ROW</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> DECLARE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">  mgrsalary DOUBLE;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> SELECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">  salary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> mgrsalary </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> FROM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">  employees </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> WHERE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">  employee_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#BABED8;"> NEW</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#BABED8;">manager_id</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> IF</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#BABED8;">  NEW</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#BABED8;">salary</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> mgrsalary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">THEN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">   SIGNAL SQLSTATE </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">HY000</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">   SET</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> MESSAGE_TEXT </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">薪资高于领导薪资错误</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> //</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">DELIMITER ;</span></span></code></pre></div><p>上面触发器声明过程中的<code>NEW</code>关键字代表<code>INSERT</code>添加语句的新记录</p><h2 id="_3-查看、删除触发器" tabindex="-1"><a class="header-anchor" href="#_3-查看、删除触发器"><span>3. 查看、删除触发器</span></a></h2><h3 id="_3-1-查看触发器" tabindex="-1"><a class="header-anchor" href="#_3-1-查看触发器"><span>3.1 查看触发器</span></a></h3><p>查看触发器是查看数据库中已经存在的触发器的定义、状态和语法信息等</p><p>方式 1 ：查看当前数据库的所有触发器的定义</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">SHOW TRIGGERS \\G</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">SHOW</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> TRIGGERS</span><span style="--shiki-light:#005CC5;--shiki-dark:#BABED8;"> \\G</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">***************************</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 1. row </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">***************************</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">             Trigger:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> before_insert</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">               Event:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> INSERT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">               Table:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> test_trigger</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">           Statement:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> BEGIN</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">INSERT</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> test_trigger_log</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">t_log</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> )</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">before_insert</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> )</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">END</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">              Timing:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> BEFORE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">             Created:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> 2025-09-06</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> 22:19:56.33</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">            sql_mode:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">             Definer:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> root@localhost</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">character_set_client:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> gbk</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">collation_connection:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> gbk_chinese_ci</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">  Database</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> Collation:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> utf8mb4_0900_ai_ci</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">***************************</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 2. row </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">***************************</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">             Trigger:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> after_insert</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">               Event:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> INSERT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">               Table:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> test_trigger</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">           Statement:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> BEGIN</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">INSERT</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> test_trigger_log</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">t_log</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> )</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> ( </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">after_insert</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> )</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">END</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">              Timing:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> AFTER</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">             Created:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> 2025-09-06</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> 22:21:38.81</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">            sql_mode:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">             Definer:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> root@localhost</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">character_set_client:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> gbk</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">collation_connection:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> gbk_chinese_ci</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">  Database</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> Collation:</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> utf8mb4_0900_ai_ci</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> rows</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (0.01 </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">)</span></span></code></pre></div><p>方式 2 ：查看当前数据库中某个触发器的定义</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> TRIGGER 触发器名</span></span></code></pre></div><p>方式 3 ：从系统库information_schema的TRIGGERS表中查询“salary_check_trigger”触发器的信息。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> FROM</span><span style="--shiki-light:#005CC5;--shiki-dark:#BABED8;"> information_schema</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#BABED8;">TRIGGERS</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">;</span></span></code></pre></div><h3 id="_3-2-删除触发器" tabindex="-1"><a class="header-anchor" href="#_3-2-删除触发器"><span>3.2 删除触发器</span></a></h3><p>触发器也是数据库对象，删除触发器也用DROP语句，语法格式如下：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> TRIGGER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;"> EXISTS</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> 触发器名称;</span></span></code></pre></div><h2 id="_4-触发器的优缺点" tabindex="-1"><a class="header-anchor" href="#_4-触发器的优缺点"><span>4. 触发器的优缺点</span></a></h2><h3 id="_4-1-优点" tabindex="-1"><a class="header-anchor" href="#_4-1-优点"><span>4.1 优点</span></a></h3><p><strong>1 、触发器可以确保数据的完整性:</strong></p><p>假设我们用<strong>进货单头表</strong>（<code>demo.importhead</code>）来保存进货单的总体信息，包括进货单编号、供货商编号、仓库编号、总计进货数量、总计进货金额和验收日期。<br><img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1757169644120-3c0d86b1-6a4b-4d43-bb77-fde70d415ffa.png" alt=""></p><p>用<strong>进货单明细表</strong>（<code>demo.importdetails</code>）来保存进货商品的明细，包括进货单编号、商品编号、进货数量、进货价格和进货金额。<br><img src="https://cdn.nlark.com/yuque/0/2025/png/2447732/1757169644204-273ce257-1cf7-48e0-9550-363f453f7d77.png" alt=""></p><p>每当我们录入、删除和修改一条进货单明细数据的时候，进货单明细表里的数据就会发生变动。这个时候，在进货单头表中的总计数量和总计金额就必须重新计算，否则，进货单头表中的总计数量和总计金额就不等于进货单明细表中数量合计和金额合计了，这就是数据不一致</p><p>为了解决这个问题，我们就可以使用触发器， <strong>规定每当进货单明细表有数据插入、修改和删除的操作时，自动触发 2 步操作：</strong></p><p>1 ）重新计算进货单明细表中的数量合计和金额合计<br> 2 ）用第一步中计算出来的值更新进货单头表中的合计数量与合计金额</p><p>这样一来，进货单头表中的合计数量与合计金额的值，就始终与进货单明细表中计算出来的合计数量与合计金额的值相同，数据就是一致的，不会互相矛盾</p><p><strong>2 、触发器可以帮助我们记录操作日志:</strong></p><p>利用触发器，可以具体记录什么时间发生了什么。比如，记录修改会员储值金额的触发器，就是一个很好的例子。这对我们还原操作执行时的具体场景，更好地定位问题原因很有帮助</p><p><strong>3 、触发器还可以用在操作数据前，对数据进行合法性检查:</strong></p><p>比如，超市进货的时候，需要库管录入进货价格。但是，人为操作很容易犯错误，比如说在录入数量的时候，把条形码扫进去了；录入金额的时候，看串了行，录入的价格远超售价，导致账面上的巨亏这些都可以通过触发器，在实际插入或者更新操作之前，对相应的数据进行检查，及时提示错误，防止错误数据进入系统</p><h3 id="_4-2-缺点" tabindex="-1"><a class="header-anchor" href="#_4-2-缺点"><span>4.2 缺点</span></a></h3><p><strong>1 、触发器最大的一个问题就是可读性差:</strong></p><p>因为触发器存储在数据库中，并且由事件驱动，这就意味着<strong>触发器有可能不受应用层的控制</strong>。这对系统维护是非常有挑战的</p><p>比如，创建触发器用于修改会员储值操作。如果触发器中的操作出了问题，会导致会员储值金额更新失败。我用下面的代码演示一下：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#babed8;--shiki-light-bg:#fff;--shiki-dark-bg:#0F111A;"><pre class="shiki shiki-themes github-light material-theme-ocean vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">update</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> demo.membermaster</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> memberdeposit=</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">20</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> where</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> memberid</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">ERROR</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 1054</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> (42S22): Unknown column </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">aa</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#BABED8;"> in </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">field list</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span></span></code></pre></div><p>结果显示，系统提示错误，字段“aa”不存在。</p><p>这是因为，触发器中的数据插入操作多了一个字段，系统提示错误。可是，如果你不了解这个触发器，很可能会认为是更新语句本身的问题，或者是会员信息表的结构出了问题。说不定你还会给会员信息表添加一个叫“aa”的字段，试图解决这个问题，结果只能是白费力。</p><p><strong>2 、相关数据的变更，可能会导致触发器出错:</strong></p><p>特别是数据表结构的变更，都可能会导致触发器出错，进而影响数据操作的正常运行。这些都会由于触发器本身的隐蔽性，影响到应用中错误原因排查的效率。</p><h3 id="_4-3-注意点" tabindex="-1"><a class="header-anchor" href="#_4-3-注意点"><span>4.3 注意点</span></a></h3><p>注意，如果在子表中定义了外键约束，并且外键指定了<code>ON UPDATE/DELETE CASCADE/SET NULL</code>子句，此时修改父表被引用的键值或删除父表被引用的记录行时，也会引起子表的修改和删除操作，此时基于子表的<code>UPDATE</code>和<code>DELETE</code>语句定义的触发器并不会被激活</p><p>例如：基于子表员工表（<code>t_employee</code>）的<code>DELETE</code>语句定义了触发器<code>t1</code>，而子表的部门编号（<code>did</code>）字段定义了外键约束引用了父表部门表（<code>t_department</code>）的主键列部门编号（<code>did</code>），并且该外键加了“<code>ON DELETE SET NULL</code>”子句，那么如果此时删除父表部门表（<code>t_department</code>）在子表员工表（<code>t_employee</code>）有匹配记录的部门记录时，会引起子表员工表（<code>t_employee</code>）匹配记录的部门编号（<code>did</code>）修改为<code>NULL</code>，但是此时不会激活触发器<code>t1</code>。只有直接对子表员工表（<code>t_employee</code>）执行<code>DELETE</code>语句时才会激活触发器<code>t1</code>。</p>`,69)])])}const p=i(l,[["render",t]]),r=JSON.parse('{"path":"/mysql/srx7ys3m/","title":"第17章_触发器","lang":"zh-CN","frontmatter":{"title":"第17章_触发器","createTime":"2025/09/06 22:43:44","permalink":"/mysql/srx7ys3m/","description":"在实际开发中，我们经常会遇到这样的情况：有 2 个或者多个相互关联的表，如商品信息和库存信息分别存放在 2 个不同的数据表中，我们在添加一条新商品记录的时候，为了保证数据的完整性，必须同时在库存表中添加一条库存记录 这样一来，我们就必须把这两个关联的操作步骤写到程序里面，而且要用事务包裹起来，确保这两个操作成为一个原子操作，要么全部执行，要么全部不执行...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第17章_触发器\\",\\"image\\":[\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1757169644120-3c0d86b1-6a4b-4d43-bb77-fde70d415ffa.png\\",\\"https://cdn.nlark.com/yuque/0/2025/png/2447732/1757169644204-273ce257-1cf7-48e0-9550-363f453f7d77.png\\"],\\"dateModified\\":\\"2025-09-06T14:48:16.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://weew12.github.io/mysql/srx7ys3m/"}],["meta",{"property":"og:site_name","content":"WEEW12 BLOG"}],["meta",{"property":"og:title","content":"第17章_触发器"}],["meta",{"property":"og:description","content":"在实际开发中，我们经常会遇到这样的情况：有 2 个或者多个相互关联的表，如商品信息和库存信息分别存放在 2 个不同的数据表中，我们在添加一条新商品记录的时候，为了保证数据的完整性，必须同时在库存表中添加一条库存记录 这样一来，我们就必须把这两个关联的操作步骤写到程序里面，而且要用事务包裹起来，确保这两个操作成为一个原子操作，要么全部执行，要么全部不执行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.nlark.com/yuque/0/2025/png/2447732/1757169644120-3c0d86b1-6a4b-4d43-bb77-fde70d415ffa.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-06T14:48:16.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-06T14:48:16.000Z"}]]},"readingTime":{"minutes":8.59,"words":2576},"git":{"createdTime":1757170096000,"updatedTime":1757170096000,"contributors":[{"name":"weew12","username":"weew12","email":"2528566339@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/weew12?v=4","url":"https://github.com/weew12"}]},"autoDesc":true,"filePathRelative":"notes/database/mysql/第17章_触发器.md","headers":[]}');export{p as comp,r as data};
